[
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人\nQ2: 这些岗位的年龄要求分别是多少\n\n当前查询：\n招聘对象包括哪些人群\n\n改写后查询：\n",
    "input": "",
    "output": "义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 教学设计报告中的“教学评价体系构建”与冷链物流行业中的“企业竞争力分析”\n\n当前查询：\n这两有何相似之处\n\n改写后查询：\n",
    "input": "",
    "output": "教学设计报告中的\"教学评价体系构建\"与冷链物流行业中的\"企业竞争力分析\"有何相似之处"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 搜索关于电脑系统组成相关文档\n\n当前查询：\n文档里面陈述了电脑系统组成是什么\n\n改写后查询：\n",
    "input": "",
    "output": "搜索关于电脑系统组成相关文档的文档里面陈述了电脑系统组成是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 把pptx文档全部搜索出来\n\n当前查询：\n里面有关于汽车的资料吗\n\n改写后查询：\n",
    "input": "",
    "output": "pptx文档里面有关于汽车的资料吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 搜测试报告相关资料\n\n当前查询：\n里面的版本上线标准是什么\n\n改写后查询：\n",
    "input": "",
    "output": "搜测试报告相关资料的版本上线标准是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 找AI写真测试报告\n\n当前查询：\n有陈述风险问题吗\n\n改写后查询：\n",
    "input": "",
    "output": "有AI写真测试报告的陈述风险问题吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 教学设计报告跟AI写真测试报告之间相似点是什么\n\n当前查询：\n不相似之处呢\n\n改写后查询：\n",
    "input": "",
    "output": "教学设计报告跟AI写真测试报告之间的不相似之处呢"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 理想 L7 的动力系统是啥样的\n\n当前查询：\n那它的动力输出在同级别的车里怎么样\n\n改写后查询：\n",
    "input": "",
    "output": "理想 L7 的动力输出在同级别的车里怎么样"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 理想 L7 的续航数据是多少\n\n当前查询：\n实际用起来续航会受哪些东西影响\n\n改写后查询：\n",
    "input": "",
    "output": "理想 L7 续航实际会受哪些东西影响"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 理想 L7 用的是什么动力系统\nQ2: 1.5T 四缸增程器是什么意思\n\n当前查询：\n这个动力系统在同级别的车里表现怎么样\n\n改写后查询：\n",
    "input": "",
    "output": "理想 L7 的动力系统在同级别的车里表现怎么样"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 理想 L7 的续航数据是多少\nQ2: 不同版本的续航有啥区别\n\n当前查询：\n实际用起来续航会受哪些因素影响\n\n改写后查询：\n",
    "input": "",
    "output": "理想 L7 的续航实际用起来会受哪些因素影响"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 理想 L7 的动力系统是啥样的\nQ2: 1.5T 四缸增程器是啥意思\nQ3: 这个动力系统在同级别的车里表现怎么样\nQ4: 它的车机系统升级了啥\n\n当前查询：\n升级后车机系统多任务处理和软件运行流畅度有啥提升\n\n改写后查询：\n",
    "input": "",
    "output": "理想 L7 的车机系统升级后多任务处理和软件运行流畅度有啥提升"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人\nQ2: 这些岗位的年龄要求分别是多少\nQ3: 招聘对象包括哪些人群\nQ4: 2025年应届毕业生需要在什么时间之前提供学历学位证书\n\n当前查询：\n留学人员需要提供什么额外的认证文件\n\n改写后查询：\n",
    "input": "",
    "output": "义乌工商职业技术学院2025年高层次人才引进计划中的留学人员需要提供什么额外的认证文件"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 比亚迪2024年新能源汽车的总销量是多少\n\n当前查询：\n这个销量同比增长了多少\n\n改写后查询：\n",
    "input": "",
    "output": "比亚迪2024年新能源汽车的总销量同比增长了多少"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 比亚迪2024年12月份的销量是多少\n\n当前查询：\n12月份的销量同比增长了多少\n\n改写后查询：\n",
    "input": "",
    "output": "比亚迪2024年12月份的销量同比增长了多少"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 比亚迪2024年12月份的销量是多少\n\n当前查询：\n纯电车型和插混车型分别销售多少\n\n改写后查询：\n",
    "input": "",
    "output": "比亚迪2024年12月份的纯电车型和插混车型分别销售多少"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌工商职业技术学院高层次人才引进的报名方式有哪些\n\n当前查询：\n需提交什么材料\n\n改写后查询：\n",
    "input": "",
    "output": "义乌工商职业技术学院高层次人才引进需提交什么材料"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌技术学院人才引进的报名入口在哪\nQ2: 要提交什么材料\n\n当前查询：\n提交后多久知道结果\n\n改写后查询：\n",
    "input": "",
    "output": "义乌技术学院人才引进报名后多久知道结果"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌技术学院人才引进的报名入口在哪\nQ2: 要提交什么材料\n\n当前查询：\n报名截止日期是？\n\n改写后查询：\n",
    "input": "",
    "output": "义乌工商职业技术学院人才引进的报名截止日期是？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 智能开发会议是什么时候召开的\n\n当前查询：\n是在哪里举行的\n\n改写后查询：\n",
    "input": "",
    "output": "智能开发会议是在哪里举行的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 这份教学设计报告的主题是什么\nQ2: 报告包含哪些主要内容\n\n当前查询：\n理念与思路是什么\n\n改写后查询：\n",
    "input": "",
    "output": "这份教学设计报告的理念与思路是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: RICHMAN-5G和RICH_GUEST-5G的账号密码是啥\nQ2: 哪个信号更好\n\n当前查询：\n还有其他wifi吗\n\n改写后查询：\n",
    "input": "",
    "output": "RICHMAN-5G和RICH_GUEST-5G以外还有其他WiFi吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 智能扫地机器人能实现哪些基础清洁功能\n\n当前查询：\n相比之前运用了哪些先进技术\n\n改写后查询：\n",
    "input": "",
    "output": "智能扫地机器人相比之前运用了哪些先进技术"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 电动汽车相较于传统燃油汽车，在能源消耗方面有何优势\n\n当前查询：\n为解决续航焦虑，在电池技术和充电设施建设上有哪些新突破\n\n改写后查询：\n",
    "input": "",
    "output": "电动汽车在电池技术和充电设施建设上为解决续航焦虑有哪些新突破"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: Yesterday Once More的演唱者是谁\nQ2: 创作背景是啥\nQ3: 旋律和歌词在表达情感上是如何相互配合的\nQ4: 卡朋特乐队在演唱风格上有哪些独特之处，这种风格对当时乐坛产生了怎样的影响\n\n当前查询：\n卡朋特乐队还有哪些经典歌曲，这些歌曲在主题和风格上有何共性\n\n改写后查询：\n",
    "input": "",
    "output": "卡朋特乐队还有哪些经典歌曲，这些歌曲在主题和风格上有何共性"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: Yesterday Once More的演唱者是谁\n\n当前查询：\n创作背景是啥\n\n改写后查询：\n",
    "input": "",
    "output": "Yesterday Once More的创作背景是啥"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: Yesterday Once More的演唱者是谁\nQ2: 创作背景是啥\nQ3: 歌词有啥特别之处\nQ4: 乐队成员有谁\n\n当前查询：\n还有哪些专辑\n\n改写后查询：\n",
    "input": "",
    "output": "Carpenters的还有哪些专辑"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 火影忍者的作者是谁\n\n当前查询：\n创作时融入了啥文化元素\n\n改写后查询：\n",
    "input": "",
    "output": "火影忍者的作者在创作时融入了啥文化元素"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 火影中有哪些经典角色，他们的成长历程是如何推动剧情发展的\n\n当前查询：\n所传达的核心价值观是什么，对观众产生了怎样的影响\n\n改写后查询：\n",
    "input": "",
    "output": "火影忍者所传达的核心价值观是什么，对观众产生了怎样的影响"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 网约车平台支持哪些叫车方式，如即时叫车、预约叫车等\n\n当前查询：\n它是如何根据用户位置和出行需求，快速匹配附近可用车辆的\n\n改写后查询：\n",
    "input": "",
    "output": "网约车平台如何根据用户位置和出行需求，快速匹配附近可用车辆的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 网约车平台支持哪些叫车方式\n\n当前查询：\n为保障乘客的出行安全，采取了哪些安全措施\n\n改写后查询：\n",
    "input": "",
    "output": "网约车平台为保障乘客的出行安全，采取了哪些安全措施"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 网约车平台的费用计算规则是怎样的\n\n当前查询：\n它有什么机制来改进服务质量和解决用户问题\n\n改写后查询：\n",
    "input": "",
    "output": "网约车平台有什么机制来改进服务质量和解决用户问题"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌工商职业技术学院高层次人才引进的报名方式有哪些\nQ2: 报名时需要提交的近五年教学科研情况及有关获奖荣誉材料，具体应如何整理和提交\nQ3: 如果报名材料提交后发现有误，是否可以修改如何修改\nQ4: 报名截止时间可至 2025 年 12 月 31 日，期间岗位招满即止，如何及时了解岗位招聘动态\n\n当前查询：\n在报名和资格审查过程中，若遇到问题，有哪些渠道可以咨询\n\n改写后查询：\n",
    "input": "",
    "output": "义乌工商职业技术学院高层次人才引进报名和资格审查过程中，若遇到问题，有哪些渠道可以咨询"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 比亚迪2024年12月份的销量是多少\n\n当前查询：\n12月份的销量同比增长了多少\n\n改写后查询：\n",
    "input": "",
    "output": "比亚迪2024年12月份的销量同比增长了多少"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 比亚迪2024年纯电车型和插混车型的销量分别是多少\nQ2: 纯电车型在全球市场表现如何\nQ3: 比亚迪2024年哪款车型销量更高\nQ4: 比亚迪2024年销量中，纯电车型占比是多少\n\n当前查询：\n比亚迪2024年插混车型的市场表现如何\n\n改写后查询：\n",
    "input": "",
    "output": "比亚迪2024年插混车型的市场表现如何"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 比亚迪2024年哪款车型销量更高\nQ2: 年销量中，纯电车型占比是多少\n\n当前查询：\n插混车型的市场表现如何\n\n改写后查询：\n",
    "input": "",
    "output": "比亚迪2024年插混车型的市场表现如何"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 比亚迪2024年哪款车型销量更高\n\n当前查询：\n24年销量中，纯电车型占比是多少\n\n改写后查询：\n",
    "input": "",
    "output": "比亚迪2024年纯电车型销量占比是多少"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 只知道此刻爱你主唱谁\n\n当前查询：\n他是哪里人\n\n改写后查询：\n",
    "input": "",
    "output": "只知道此刻爱你的主唱是哪里人"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 只知道此刻爱你主唱谁\nQ2: 他是哪里人\n\n当前查询：\n稻香的主唱呢？\n\n改写后查询：\n",
    "input": "",
    "output": "稻香的主唱是谁，他是哪里人"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 扫毒3的主演是谁\nQ2: 刘德华在里面吗\n\n当前查询：\n扫毒1呢\n\n改写后查询：\n",
    "input": "",
    "output": "扫毒1的主演是谁"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 娄门社区文化节里从防汛沙袋到直播间：我的缂丝续命史主演谁\n\n当前查询：\n他还演过什么电视剧\n\n改写后查询：\n",
    "input": "",
    "output": "娄门社区文化节里从防汛沙袋到直播间：我的缂丝续命史主演还演过什么电视剧"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 开国大典宣告中国人民从此站立起来时间是\n\n当前查询：\n那改革开放呢\n\n改写后查询：\n",
    "input": "",
    "output": "1949年改革开放呢"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 测试部门团建地点在哪\n\n当前查询：\n去年在哪\n\n改写后查询：\n",
    "input": "",
    "output": "测试部门团建地点"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 电影旺角卡门的主演是刘德华\nQ2: 还有谁主演\n\n当前查询：\n无间道呢\n\n改写后查询：\n",
    "input": "",
    "output": "无间道的主演是谁"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 天若有情是哪个唱滴\n\n当前查询：\n还唱了啥\n\n改写后查询：\n",
    "input": "",
    "output": "天若有情还唱了啥"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 电影《旺角卡门》的主演是刘德华\nQ2: 他还出演过哪些电影\n\n当前查询：\n他还有哪些歌唱作品\n\n改写后查询：\n",
    "input": "",
    "output": "刘德华还有哪些歌唱作品"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 他还出演过哪些电影\nQ2: 刘德华\n\n当前查询：\n他还有哪些歌唱作品\n\n改写后查询：\n",
    "input": "",
    "output": "刘德华还有哪些歌唱作品"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 什么时候开始出发\nQ2: 测试部团建\n\n当前查询：\n有什么注意事项\n\n改写后查询：\n",
    "input": "",
    "output": "测试部团建有什么注意事项"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 有什么注意事项\nQ2: 测试部团建\n\n当前查询：\n什么时候开始出发\n\n改写后查询：\n",
    "input": "",
    "output": "无法改写。历史查询与当前查询没有明确的语义关联,内容不相关,无法进行替换和补充。因此保持当前查询原样: \"什么时候开始出发\"。"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 帮我生成用例\n\n当前查询：\n关于测试ai重写功能的\n\n改写后查询：\n",
    "input": "",
    "output": "关于测试AI用例生成功能的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 11:00-13:00是安排去哪里\n\n当前查询：\n根据粤韵七日行】广东深度游行程（2024 年版）.docx中Day 1的内容来回答\n\n改写后查询：\n",
    "input": "",
    "output": "根据粤韵七日行】广东深度游行程（2024 年版）.docx中Day 1 11:00-13:00安排的内容来回答"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 破坏了中国的主权和领土完整，领海主权 ，司法主权（享受领事裁判\n权），关税主权（协定关税）等等。\n\n当前查询：\n是签订了《中英五口通商章程》和《虎门条约》，《南京条约》，《穿鼻草约》的影响吗，\n\n改写后查询：\n",
    "input": "",
    "output": "是《中英五口通商章程》、《虎门条约》、《南京条约》和《穿鼻草约》对中国主权和领土完整的破坏影响吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 开发者权限\n\n当前查询：\n根据时间线—大屏互动上线计划.xls显示谁有这个权限\n\n改写后查询：\n",
    "input": "",
    "output": "开发者根据时间线—大屏互动上线计划.xls显示谁有这个权限"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《鹿鼎记》的主演是刘德华\n\n当前查询：\n他什么时候发专辑《忘情水》的\n\n改写后查询：\n",
    "input": "",
    "output": "刘德华什么时候发专辑《忘情水》的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 小学低年级团建活动什么时间开始\nQ2: 活动在哪里举行\nQ3: 有什么活动内容\n\n当前查询：\n注意事项有哪些\n\n改写后查询：\n",
    "input": "",
    "output": "小学低年级团建活动的注意事项有哪些"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《广州市健康促进与教育规定》是何时公布的\nQ2: 该规定从何时开始正式施行\nQ3: 制定该规定的主要目的是什么\nQ4: 健康工作应遵循哪些基本原则\n\n当前查询：\n市、区人民政府应承担哪些职责\n\n改写后查询：\n",
    "input": "",
    "output": "广州市市、区人民政府在《广州市健康促进与教育规定》中应承担哪些职责"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 近期问题分析会议纪要的会议主题是什么\nQ2: 会议是什么时候召开的\nQ3: 会议有多少人参加\nQ4: 分别是谁\n\n当前查询：\n会议形成了几点决议\n\n改写后查询：\n",
    "input": "",
    "output": "近期问题分析会议纪要形成了几点决议"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 二车间的成品仓库的资产状态是什么\nQ2: 折旧方法是什么\n\n当前查询：\n使用年限是多少\n\n改写后查询：\n",
    "input": "",
    "output": "二车间的成品仓库资产的使用年限是多少"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《古树名木保护条例》的制定目的是什么\nQ2: 古树和名木的定义分别是什么\nQ3: 国家的保护原则是什么\nQ4: 保护管理工作的经费来源是什么\n\n当前查询：\n如何分级保护的\n\n改写后查询：\n",
    "input": "",
    "output": "《古树名木保护条例》的分级保护方式是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 学生信息管理系统主要使用场景是：______\nQ2: 在登录界面中输入空用户名或密码后，系统提示什么\n\n当前查询：\n该系统可以用于学生选课吗\n\n改写后查询：\n",
    "input": "",
    "output": "学生信息管理系统可以用于学生选课吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 触电分为哪几种情况\nQ2: 不同电压对人体的伤害程度有何差异\nQ3: 使伤者脱离电源的具体方法有哪些\n\n当前查询：\n操作时需要注意什么\n\n改写后查询：\n",
    "input": "",
    "output": "触电操作时需要注意什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 触电分为哪几种情况\nQ2: 不同电压对人体的伤害程度有何差异\n\n当前查询：\n使伤者脱离电源的具体方法有哪些\n\n改写后查询：\n",
    "input": "",
    "output": "触电后使伤者脱离电源的具体方法有哪些"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 触电分为哪几种情况\n\n当前查询：\n不同电压对人体的伤害程度有何差异\n\n改写后查询：\n",
    "input": "",
    "output": "人体触电时，不同电压对人体的伤害程度有何差异"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024年度财务工作中，作者的总体表现如何\nQ2: 她在财务核算和报表方面的工作成果是什么\nQ3: 她在协调与沟通方面做了哪些工作\nQ4: 她在2024年度遇到了哪些问题和挑战\n\n当前查询：\n她是如何适应新财务系统的\n\n改写后查询：\n",
    "input": "",
    "output": "作者是如何适应新财务系统的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《上海市非机动车安全管理条例》的立法目的是什么\nQ2: 条例适用于哪些非机动车及相关活动\nQ3: 条例对非机动车的登记上牌有哪些具体规定\n\n当前查询：\n条例对非机动车停放和充电管理有哪些具体措施\n\n改写后查询：\n",
    "input": "",
    "output": "《上海市非机动车安全管理条例》对非机动车停放和充电管理有哪些具体措施"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 海尔电热水器的执行标准是什么\nQ2: 它的“1+5”成套增值服务具体内容是什么\nQ3: 如果服务未执行到位，用户如何投诉\n\n当前查询：\n投诉后有何奖励\n\n改写后查询：\n",
    "input": "",
    "output": "海尔电热水器投诉后有何奖励"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 习近平总书记2024年11月的湖北之行有何重要战略考量\nQ2: 他在云梦县博物馆考察时强调了什么\n\n当前查询：\n他对湖北在长江经济带高质量发展中的作用有何指示\n\n改写后查询：\n",
    "input": "",
    "output": "习近平总书记对湖北在长江经济带高质量发展中的作用有何指示"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: Deepseek的介绍\nQ2: 它有哪些最新的研究成果\n\n当前查询：\n它在强化学习方面有哪些创新\n\n改写后查询：\n",
    "input": "",
    "output": "Deepseek在强化学习方面有哪些创新"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 中国移动云盘的主要功能\nQ2: 它的的免费存储空间有多少\n\n当前查询：\n怎样才能领取\n\n改写后查询：\n",
    "input": "",
    "output": "中国移动云盘怎样才能领取免费存储空间"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 小米公司的发展历程是什么\nQ2: 介绍一下该公司的智能硬件产品布局\n\n当前查询：\n它未来在智能硬件领域的发展方向是什么\n\n改写后查询：\n",
    "input": "",
    "output": "小米公司未来在智能硬件领域的发展方向是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 新能源汽车的发展前景怎样\nQ2: 电池技术提升后，对它的价格有影响吗\n\n当前查询：\n车价还会涨吗\n\n改写后查询：\n",
    "input": "",
    "output": "新能源汽车的价格还会涨吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 真人版CS镭战运动是一项怎么样的运动\nQ2: 这项运动使用的武器是什么\nQ3: 这项运动的核心价值是什么\nQ4: 它是否适合公司的价值是否能增强员工的凝聚力\n\n当前查询：\n它的活动安排是怎么样的\n\n改写后查询：\n",
    "input": "",
    "output": "真人版CS镭战运动的活动安排是怎么样的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 讲一下Miles2024年年终总结当中，阐述在2024年本年度的工作成果中，第一个点讲的是什么\nQ2: 第二点讲的是什么\nQ3: 第三点讲的是什么\nQ4: 第四点讲的是什么\n\n当前查询：\n第五点讲的是什么\n\n改写后查询：\n",
    "input": "",
    "output": "Miles2024年年终总结当中，第五点讲的是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 孙悟空当初在天庭做过什么官职\nQ2: 他对这些官职满意吗\nQ3: 如果是满意，为什么要大闹天宫\nQ4: 他在天庭做官不好吗\n\n当前查询：\n他得罪了玉皇大帝，有什么好处吗\n\n改写后查询：\n",
    "input": "",
    "output": "孙悟空得罪了玉皇大帝，有什么好处吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 华为nova13是什么时候发布的\nQ2: 定价是多少\nQ3: 机身有什么颜色可选\nQ4: 多大的容量电池\n\n当前查询：\n支持5G网络吗\n\n改写后查询：\n",
    "input": "",
    "output": "华为nova13支持5G网络吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 假如出生在公元前2060年，当时是什么朝代\nQ2: 那么过了470年后，那时候是商朝是吗\nQ3: 再过550年，那时候是西周是吗\nQ4: 再过300年，那时候是东周是吗\n\n当前查询：\n假如我从出生开始到东周时候，那么一共是过了多少年\n\n改写后查询：\n",
    "input": "",
    "output": "假如出生在公元前2060年到东周时期，那么一共是过了多少年"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 人类社会发展的最初阶段是什么\nQ2: 该阶段的生产力和生产关系是怎么样的\nQ3: 那么下一个社会阶段是什么\nQ4: 该社会阶段的生产力和生产关系是怎么样的\n\n当前查询：\n这两个社会阶段的冶铁业是不是还没成熟\n\n改写后查询：\n",
    "input": "",
    "output": "原始社会和原始农业社会的冶铁业是不是还没成熟"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 气压带的形成原因有几种分别是什么\nQ2: 赤道低压带、极地高压带是属于哪种原因\nQ3: 副热带高压带、副极地低压带是属于哪种原因\nQ4: 风带的形成原因有几种分别是什么\n\n当前查询：\n南半球形成东南风,即极地东风，属于哪种\n\n改写后查询：\n",
    "input": "",
    "output": "南半球赤道低压带形成的东南风，即极地东风，属于哪种原因"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024年广州文化公园中秋灯会的举办时间是几号到几号\nQ2: 一共几天\nQ3: 2024年10月8号还在举行吗\nQ4: 除了灯会展览外，期间还有什么其他活动吗\n\n当前查询：\n适合带小孩子参加吗\n\n改写后查询：\n",
    "input": "",
    "output": "2024年广州文化公园中秋灯会适合带小孩子参加吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 广东依顿电子科技股份有限公司关于招聘多媒体与显示产品线产品SE岗位中，对哪些岗位进行录用\nQ2: 这份公示是不是代表着该公司已经拟录用这批人了\nQ3: 张家辉被录用了吗\nQ4: 根据录用人选来看，学历都在哪些范围里面\n\n当前查询：\n大专学历可以参加吗\n\n改写后查询：\n",
    "input": "",
    "output": "广东依顿电子科技股份有限公司多媒体与显示产品线产品SE岗位大专学历可以参加吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024年广州文化公园中秋灯会几时到几时\nQ2: 可以玩多少天\nQ3: 2024 10 8还在举办吗\n\n当前查询：\n在nali举办\n\n改写后查询：\n",
    "input": "",
    "output": "在广州文化公园中秋灯会举办"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024年广州文化公园中秋灯会几时到几时\nQ2: 可以玩多少天\n\n当前查询：\n2024 10 8还在举办吗\n\n改写后查询：\n",
    "input": "",
    "output": "2024年广州文化公园中秋灯会10月8日还在举办吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024年广州文化公园中秋灯会几时到几时\n\n当前查询：\n可以玩多少天\n\n改写后查询：\n",
    "input": "",
    "output": "2024年广州文化公园中秋灯会可以玩多少天"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 广东依顿电子科技股份有限公司SE岗位招聘对哪些岗位进行录用\n\n当前查询：\n哪些人收到offer了\n\n改写后查询：\n",
    "input": "",
    "output": "广东依顿电子科技股份有限公司SE岗位招聘中哪些人收到offer了"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 中非论坛峰会上，提到多少次访问非洲\n\n当前查询：\n访问非洲的主要目的是什么\n\n改写后查询：\n",
    "input": "",
    "output": "中非论坛峰会访问非洲的主要目的是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024电网南方校园招聘的笔试比例是怎么样的\n\n当前查询：\n2024南方电网校园招生的笔试比例是几比几\n\n改写后查询：\n",
    "input": "",
    "output": "2024电网南方校园招聘的笔试比例是几比几"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 蛋白质是啥子\n\n当前查询：\n为啥蛋白质对人有效\n\n改写后查询：\n",
    "input": "",
    "output": "为啥蛋白质对人体有效"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《聊斋志异》写的是啥子\n\n当前查询：\n这本书写了什么东东内容\n\n改写后查询：\n",
    "input": "",
    "output": "《聊斋志异》写了什么样的内容"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024.7.29召开了第六届董事会会议讲了什么\nQ2: 谁做了副总经理\n\n当前查询：\n讲一下副总是怎么样的呗\n\n改写后查询：\n",
    "input": "",
    "output": "2024.7.29召开的第六届董事会会议中，新任副总经理是怎么样的情况"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌工商职业技术学院2025年点报名呀\nQ2: 本科可以报名\nQ3: 今次招聘计划打算招几多人\nQ4: 哪个人可以报名\n\n当前查询：\n2026年毕业可以报吗\n\n改写后查询：\n",
    "input": "",
    "output": "义乌工商职业技术学院2025年高层次人才引进计划2026年毕业可以报名吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 西游记中，四人师徒分别是谁\nQ2: 大师兄会什么技能\nQ3: 他为什么大闹天宫\nQ4: 他为什么成为了唐僧的徒弟\n\n当前查询：\n这猴子打伤过师傅吗\n\n改写后查询：\n",
    "input": "",
    "output": "孙悟空打伤过唐僧吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 谷胱甘肽中必定含有哪几种元素\nQ2: 它的什么与什么试剂作用是显紫色的\nQ3: 它具有多种功能的原因是什么\n\n当前查询：\n人如果吃了富含这种东西的食物，会提高免疫力吗\n\n改写后查询：\n",
    "input": "",
    "output": "人如果吃了富含谷胱甘肽的食物，会提高免疫力吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 蛋白质是什么\nQ2: 为什么它对人体有帮助\nQ3: 它是由什么组成的\n\n当前查询：\n叶绿体中需要它来催化ATP合成吗\n\n改写后查询：\n",
    "input": "",
    "output": "蛋白质在叶绿体中需要来催化ATP合成吗"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 在《聊斋志异》中，反映了妇女的哪些问题\nQ2: 在她们之中，有哪些人是渴望着自由的形象\n\n当前查询：\n她们为什么渴望自由\n\n改写后查询：\n",
    "input": "",
    "output": "《聊斋志异》中的女性角色为什么渴望自由"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《聊斋志异》是谁写的\nQ2: 这本书为什么能流传永世\nQ3: 这本书主要讲了什么简要说明\n\n当前查询：\n这书反映了当时怎么样的社会\n\n改写后查询：\n",
    "input": "",
    "output": "《聊斋志异》反映了当时怎么样的社会"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 南方电网 2024 年春季校园招聘的具体岗位有哪些\nQ2: 这次的招聘流程是怎么样的\nQ3: 这个招聘对岗位有什么要求\n\n当前查询：\n这次招聘时间持续多久\n\n改写后查询：\n",
    "input": "",
    "output": "南方电网 2024 年春季校园招聘的招聘时间持续多久"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 秦统一的客观背景是什么\nQ2: 它的主观背景是什么\nQ3: 这次统一的意义是什么\nQ4: 它灭了多少个国\n\n当前查询：\n秦灭亡的根本原因是\n\n改写后查询：\n",
    "input": "",
    "output": "秦朝灭亡的根本原因是"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 劳动法是啥时候开始实施\nQ2: 它的第二条讲了什么\nQ3: 在校大学生勤工俭学是否适用于它吗\n\n当前查询：\n它的原则是什么\n\n改写后查询：\n",
    "input": "",
    "output": "劳动法的原则是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 经济危机的基本特征是什么\nQ2: 它的主要表现是什么\n\n当前查询：\n形成它的原因是什么\n\n改写后查询：\n",
    "input": "",
    "output": "经济危机形成的原因是什么"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 公司在2024年7月29号召开了第六届董事会第十四次会议，审议通过了什么议案\nQ2: 在《聊斋志异》中，反映了妇女的哪些问题\nQ3: 该议案谁被聘任为公司副总经理\n\n当前查询：\n介绍一下副总经理\n\n改写后查询：\n",
    "input": "",
    "output": "介绍一下公司第六届董事会第十四次会议新聘任的副总经理"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 谷胱甘肽中必定含有哪几种元素\nQ2: 它的什么与什么试剂作用是显紫色的\nQ3: 四人师徒分别是谁\n\n当前查询：\n大师兄会什么技能\n\n改写后查询：\n",
    "input": "",
    "output": "四人师徒中的大师兄会什么技能"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 华为nova13是什么时候发布的\nQ2: 定价是多少\nQ3: 三圈环流有几种运动方式\n\n当前查询：\n它的运动类型分几种\n\n改写后查询：\n",
    "input": "",
    "output": "华为nova13的运动类型分几种"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌工商职业技术学院2025年报名流程是怎么的\nQ2: 报名成功后的流程是怎么样的麻烦讲一下从报名成功到成功入职这一过程中，有什么环节\nQ3: 镭战要求几岁的孩子在无陪同情况下可以参加活动\n\n当前查询：\n玩的过程中，需要注意什么孕妇可以参加吗\n\n改写后查询：\n",
    "input": "",
    "output": "义乌工商职业技术学院2025年镭战活动中，孕妇在玩的过程中需要注意什么，能否参加？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 南方电网为哪些地方提供电力服务保障\nQ2: 它目前的供电人口是多少\nQ3: 中秋节、国庆节放假安排是怎么样的\n\n当前查询：\n中秋可以放几天\n\n改写后查询：\n",
    "input": "",
    "output": "南方电网中秋可以放几天"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 西游记当中，孙悟空扮演的是什么角色\nQ2: 他和唐僧是什么关系\nQ3: 他的二师弟和唐僧又是什么关系\nQ4: 沙僧是因为什么原因被贬下凡\n\n当前查询：\n那他和唐僧是什么关系\n\n改写后查询：\n",
    "input": "",
    "output": "孙悟空和唐僧是什么关系"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 劳动法讲的是什么\nQ2: 它的第二条讲了什么\nQ3: 在校大学生勤工俭学是否适用于它吗\nQ4: 在《聊斋志异》中，反映了妇女的哪些问题\n\n当前查询：\n讲回我们刚刚说的法律，它保障了谁的权益\n\n改写后查询：\n",
    "input": "",
    "output": "劳动法保障了谁的权益"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 原始社会的生产力状况是怎么样\nQ2: 它的生产关系是怎么样\nQ3: 奴隶社会的生产力状况是怎么样\nQ4: 它的生产关系是怎么样\n\n当前查询：\n这两者的生产力有什么区别\n\n改写后查询：\n",
    "input": "",
    "output": "原始社会和奴隶社会的生产力有什么区别"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 经济基础是什么\nQ2: 它包含了什么\nQ3: 上层建筑是什么\nQ4: 这两者的辩证关系是怎么样\n\n当前查询：\n秦朝的覆灭符合这个关系吗\n\n改写后查询：\n",
    "input": "",
    "output": "秦朝的覆灭是否符合经济基础和上层建筑的辩证关系？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 第一节中提到危机纪年第8年，三体舰队距太阳系几光年\n\n当前查询：\n第12年呢？\n\n改写后查询：\n",
    "input": "",
    "output": "第一节提到的危机纪年第8年的三体舰队距太阳系距离，在第12年又是多少光年？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《景阳冈》中，店家为什么要劝阻武松过冈？\n\n当前查询：\n最后武松怎么样了？\n\n改写后查询：\n",
    "input": "",
    "output": "《景阳冈》中武松最后怎么样了？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《景阳冈》中，店家为什么要劝阻武松过冈？\nQ2: 最后武松怎么样了？\n\n当前查询：\n那宋江最后什么归顺了？\n\n改写后查询：\n",
    "input": "",
    "output": "那宋江最后为什么归顺了？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 大数据可视化面临的挑战是什么？\n\n当前查询：\n当前有什么解决措施？\n\n改写后查询：\n",
    "input": "",
    "output": "大数据可视化面临的挑战有哪些解决措施？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 触电什么情况可自救？什么情况不可自救？\nQ2: 怎么救出伤者呢？\n\n当前查询：\n帮着伤者脱离后应该采取哪些措施？\n\n改写后查询：\n",
    "input": "",
    "output": "帮助触电伤者脱离后应该采取哪些措施？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2023年中华传统晒书活动主题是？\nQ2: 活动方案指导单位是？\n\n当前查询：\n有哪些媒体参与了活动报道？\n\n改写后查询：\n",
    "input": "",
    "output": "2023年中华传统晒书活动有哪些媒体参与了活动报道？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 党的最高理想和最终目标是什么\nQ2: 什么时候能实现？\nQ3: 实现之后我们的生活水平会提高吗？\n\n当前查询：\n我们可以做些什么来帮助实现？\n\n改写后查询：\n",
    "input": "",
    "output": "党的最高理想和最终目标实现过程中，我们可以做些什么来帮助实现？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 3.2.5 登出接口是谁负责开发的？\nQ2: 他还负责了哪些接口的开发？\nQ3: 查询SIM卡认证结果接口也是他开发的吗？\nQ4: 那这个接口是哪个开发负责的？\n\n当前查询：\n这个开发负责的接口有哪些？\n\n改写后查询：\n",
    "input": "",
    "output": "查询SIM卡认证结果接口开发负责人负责的接口有哪些？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 特朗普上台后对关税进行了什么操作？\nQ2: 这些操作对中国有何影响？\nQ3: 有什么反制措施吗？\nQ4: 这些措施会影响到自身经济吗？\n\n当前查询：\n有没有更好的办法？\n\n改写后查询：\n",
    "input": "",
    "output": "针对美中贸易战，有没有比反制措施更好的办法？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 德国上一任总理是谁？\nQ2: 她毕业于哪个学校\nQ3: 她是哪一年步入政坛的？\nQ4: 她就任总理期间有哪些值得关注的决策？\n\n当前查询：\n她一共执政了多少年？\n\n改写后查询：\n",
    "input": "",
    "output": "默克尔一共执政了多少年？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 中国国土面积有多大？\nQ2: 首都是哪里？\nQ3: 有多少个民族？\nQ4: 有多少个省份？\n\n当前查询：\n经济发达的省份是哪些？\n\n改写后查询：\n",
    "input": "",
    "output": "中国经济发达的省份是哪些？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 周杰伦为啥歌唱得这么好\n\n当前查询：\n他的音乐风格有什么特别之处\n\n改写后查询：\n",
    "input": "",
    "output": "周杰伦的音乐风格有什么特别之处"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 周杰伦为啥歌唱得这么好\nQ2: 他的音乐风格有什么特别之处\n\n当前查询：\n他啥时候开始创作的，介绍一下\n\n改写后查询：\n",
    "input": "",
    "output": "周杰伦啥时候开始创作的，介绍一下"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 告白气球是杰伦的歌吗？\nQ2: 这首歌的歌词讲述了什么故事\n\n当前查询：\n它是哪一年发布的\n\n改写后查询：\n",
    "input": "",
    "output": "告白气球是哪一年发布的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 电影肖申克的救鼠男主系谁？\nQ2: 这个角色在电影中的主要情节是什么\n\n当前查询：\n这部电影的导演是谁\n\n改写后查询：\n",
    "input": "",
    "output": "肖申克的救赎电影的导演是谁"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 扬州是哪个省份？\nQ2: 有哪些著名的旅游景点\n\n当前查询：\n历史文化有什么特色\n\n改写后查询：\n",
    "input": "",
    "output": "扬州的历史文化有什么特色"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 东风公司发动机厂主要生产哪些东东？\n\n当前查询：\n这些发动机主要用于哪些车型\n\n改写后查询：\n",
    "input": "",
    "output": "东风公司发动机厂生产的发动机主要用于哪些车型"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 东风汽车有限公司建哪年\nQ2: 总部在哪\n\n当前查询：\n主要产品线是？\n\n改写后查询：\n",
    "input": "",
    "output": "东风汽车有限公司的主要产品线是？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 华为matte70的主摄有多少个摄像头？\n\n当前查询：\n每个有啥用途？\n\n改写后查询：\n",
    "input": "",
    "output": "华为Mate70的主摄摄像头有什么用途？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 天空为什么是兰色的？\nQ2: 一天的颜色是怎么变化的\n\n当前查询：\n为啥变成红色？\n\n改写后查询：\n",
    "input": "",
    "output": "天空为什么会变成红色？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 电影《烈火雄心》主叫系谁？\n\n当前查询：\n他后面还拍了什么电影吗？\n\n改写后查询：\n",
    "input": "",
    "output": "电影《烈火雄心》的主角后面还拍了什么电影吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 李华是哪个学校毕业的？\n\n当前查询：\n毕业后就业的第一家公私叫什么？\n\n改写后查询：\n",
    "input": "",
    "output": "李华毕业后就业的第一家公司叫什么？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 请问白云山在广州哪个区？\nQ2: 从广州塔到白云山怎么过去方便？\nQ3: 通过地铁方式\n\n当前查询：\n这条线路过去要多久？\n\n改写后查询：\n",
    "input": "",
    "output": "从广州塔到白云山的地铁线路过去要多久？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 李晓华的简历内容\nQ2: 她毕业于哪个学校\nQ3: 她哪一年毕业的？\n\n当前查询：\n她上一份工作在哪家公司就职\n\n改写后查询：\n",
    "input": "",
    "output": "李晓华上一份工作在哪家公司就职"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 广州塔在哪里？\nQ2: 它属于哪个市？\n\n当前查询：\n它属于哪个省会？\n\n改写后查询：\n",
    "input": "",
    "output": "广州塔属于哪个省会？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 孙悟空第一次去任职是什么官\nQ2: 他用的武器叫什么？\n\n当前查询：\n他的两个师傅是谁？\n\n改写后查询：\n",
    "input": "",
    "output": "孙悟空的两个师傅是谁？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 多少伏电压等级下属于不可自救的触电？\n\n当前查询：\n这种情况如何帮着脱离危险？\n\n改写后查询：\n",
    "input": "",
    "output": "在遇到不可自救的触电情况下，如何帮助脱离危险？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 东风汽车有限公司始建于哪年\nQ2: 这个公司主要生产什么产品？\n\n当前查询：\n它具备什么生产能力？\n\n改写后查询：\n",
    "input": "",
    "output": "东风汽车有限公司具备什么生产能力？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 美国目前的总统是谁？\nQ2: 他之前就任过什么职位？\nQ3: 他最近有出台什么政策吗？\n\n当前查询：\n对中国有什么影响？\n\n改写后查询：\n",
    "input": "",
    "output": "拜登总统的政策对中国有什么影响？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 安格拉·默克尔个人介绍\nQ2: 她就任总理多长时间\nQ3: 她有什么著名的政绩么？\n\n当前查询：\n她下台之后谁接替了总理一职？\n\n改写后查询：\n",
    "input": "",
    "output": "安格拉·默克尔下台之后谁接替了总理一职？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 美国首都是哪里？\n\n当前查询：\n所在位置是哪个时区？\n\n改写后查询：\n",
    "input": "",
    "output": "美国首都所在位置是哪个时区？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 蝙蝠侠的版权属于哪个电影制造商的？\n\n当前查询：\n它还拍摄过哪些经典电影？\n\n改写后查询：\n",
    "input": "",
    "output": "蝙蝠侠电影制作方还拍摄过哪些经典电影？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 《景阳冈》中，店家为什么要劝阻武松过冈？\n\n当前查询：\n那宋江最后什么归顺了？\n\n改写后查询：\n",
    "input": "",
    "output": "那宋江最后为什么归顺了"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 唐宋元明清中那个朝代最短？\n\n当前查询：\n哪个最长？\n\n改写后查询：\n",
    "input": "",
    "output": "唐宋元明清中哪个朝代最长？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 小明毕业于哪一年？\nQ2: 他今年多大了？\nQ3: 中国首都在哪里？\n\n当前查询：\n有什么景点值得观看吗？\n\n改写后查询：\n",
    "input": "",
    "output": "中国首都有什么景点值得观看吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 考试前饮食应该如何安排？\nQ2: 这些食物能提供什么营养？\nQ3: 奶酪的发源地在哪里？\n\n当前查询：\n有哪些种类呢？\n\n改写后查询：\n",
    "input": "",
    "output": "奶酪有哪些种类呢？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 这些食物能提供什么营养？\nQ2: 奶酪的发源地在哪里？\n\n当前查询：\n有哪些种类呢\n\n改写后查询：\n",
    "input": "",
    "output": "奶酪有哪些种类呢"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 奶酪的发源地在哪里？\n\n当前查询：\n介绍下种类\n\n改写后查询：\n",
    "input": "",
    "output": "介绍下奶酪的种类"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: NBA球星詹姆斯介绍\nQ2: 他在哪一年活得了总冠军？\n\n当前查询：\n和科比相比，哪个厉害\n\n改写后查询：\n",
    "input": "",
    "output": "詹姆斯和科比相比，哪个厉害"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: NBA球星詹姆斯介绍\nQ2: 他在哪一年活得了总冠军？\nQ3: 和科比相比，哪个厉害\n\n当前查询：\n他哪一年去了湖人\n\n改写后查询：\n",
    "input": "",
    "output": "詹姆斯哪一年去了湖人"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 广州塔在哪里？\n\n当前查询：\n它属于哪个市？\n\n改写后查询：\n",
    "input": "",
    "output": "广州塔属于哪个市？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 广州塔在哪里？\nQ2: 它属于哪个市？\n\n当前查询：\n它属于哪个省会？\n\n改写后查询：\n",
    "input": "",
    "output": "广州塔属于哪个省会？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 小米手机有哪些产品？\n\n当前查询：\n米粉对手机的评价如何\n\n改写后查询：\n",
    "input": "",
    "output": "小米手机的粉丝们对手机的评价是如何的"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 3.2.5 登出接口是谁负责开发的？\nQ2: 他还负责了哪些接口的开发？\nQ3: 查询SIM卡认证结果接口也是他开发的吗？\n\n当前查询：\n那这个接口是哪个开发负责的？\n\n改写后查询：\n",
    "input": "",
    "output": "查询SIM卡认证结果接口是谁负责开发的？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 3.2.5 登出接口是谁负责开发的？\nQ2: 他还负责了哪些接口的开发？\n\n当前查询：\n查询SIM卡认证结果接口也是他开发的吗？\n\n改写后查询：\n",
    "input": "",
    "output": "3.2.5 登出接口负责人是否也开发了SIM卡认证结果接口？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 3.2.5 登出接口是谁负责开发的？\n\n当前查询：\n他还负责了哪些接口的开发？\n\n改写后查询：\n",
    "input": "",
    "output": "3.2.5 登出接口的开发者还负责了哪些接口的开发？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 特朗普上台后对关税进行了什么操作？\nQ2: 这些操作对中国有何影响？\nQ3: 有什么反制措施吗？\nQ4: 这些措施会影响到自身经济吗？\n\n当前查询：\n有没有更好的办法？\n\n改写后查询：\n",
    "input": "",
    "output": "针对中美贸易争端中的关税问题有没有更好的办法？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 3.2.5 登出接口是狗二负责开发的么？\nQ2: 他还负责了哪些接口的开发？\nQ3: 大模型服务接口也是他开发的吗？\n\n当前查询：\n那这个接口是谁开发的？\n\n改写后查询：\n",
    "input": "",
    "output": "大模型服务接口是谁开发的？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 蝙蝠侠的版权属于华纳电影商吗？\nQ2: 它还拍摄过哪些经典电影？\n\n当前查询：\n它还拍摄过哪些经典电影？\n\n改写后查询：\n",
    "input": "",
    "output": "华纳电影商还拍摄过哪些经典电影？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌职业技术学院2025年的人才招聘计划是什么？\nQ2: 本科和研究生可以报名吗？\nQ3: 计划要引进多少人？\n\n当前查询：\n对象有哪些？\n\n改写后查询：\n",
    "input": "",
    "output": "义乌职业技术学院2025年的人才计划招聘对象有哪些？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 义乌职业技术学院2025年的人才招聘计划是什么？\nQ2: 本科和研究生可以报名吗？\nQ3: 计划要引进多少人？\nQ4: 对象有哪些？\n\n当前查询：\n我觉得我可以胜任领军人才，但是我是1968年出生的，我可以报名吗？\n\n改写后查询：\n",
    "input": "",
    "output": "我觉得我可以胜任领军人才，但是我是1968年出生的，我可以报名义乌职业技术学院2025年的人才招聘计划吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 关于时间推理，没有重写前面的最开始的时间\nQ2: 假如出生在公元前2060年，当时是什么朝代？\n\n当前查询：\n过了470年，是商朝吗？\n\n改写后查询：\n",
    "input": "",
    "output": "假如出生在公元前2060年，过了470年，是商朝吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 假如出生在公元前2060年，当时是什么朝代？\nQ2: 过了470年，这时候是商朝吗？\n\n当前查询：\n再过550年，这时候是西周吗？\n\n改写后查询：\n",
    "input": "",
    "output": "假如出生在公元前2060年，过了470年，再过550年，这时候是西周吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 假如出生在公元前2060年，当时是什么朝代？\nQ2: 过了470年，这时候商朝吗？\nQ3: 再过550年，这时候是西周吗？\n\n当前查询：\n再过300年，这时候的朝代是东周吗？\n\n改写后查询：\n",
    "input": "",
    "output": "假如出生在公元前2060年，过了470年，再过550年，再过300年，这时候的朝代是东周吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 人类社会发展的最初阶段是什么？\nQ2: 该阶段的生产力和生产关系是怎么样的？\nQ3: 下一个社会阶段是什么？\n\n当前查询：\n这个社会阶段的生产力和生产关系是怎么样的？\n\n改写后查询：\n",
    "input": "",
    "output": "人类社会发展的下一个社会阶段的生产力和生产关系是怎么样的？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\n\n\n当前查询：\n唐僧有多少个屠弟？分别哪个？\n\n改写后查询：\n",
    "input": "",
    "output": "唐僧有多少个徒弟？分别哪个？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\n\n\n当前查询：\n天空为什么是兰色的？\n\n改写后查询：\n",
    "input": "",
    "output": "天空为什么是蓝色的？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 2024年广州文化公园中秋灯会几时到几时？\n\n当前查询：\n灯会在nali举办？\n\n改写后查询：\n",
    "input": "",
    "output": "广州文化公园中秋灯会在哪里举办？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\n\n\n当前查询：\n登录JIRA系统，需要先访问神马？\n\n改写后查询：\n",
    "input": "",
    "output": "登录JIRA系统，需要先访问什么？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: Kubernetes集群扩容方案有哪些？\nQ2: 自动扩容的优缺点是什么？\n\n当前查询：\n还有其他方案吗？\n\n改写后查询：\n",
    "input": "",
    "output": "除了自动扩容，Kubernetes集群还有其他扩容方案吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: FastAPI和Flask的区别是什么？\nQ2: Flask的性能如何？\n\n当前查询：\n另一个框架呢？\n\n改写后查询：\n",
    "input": "",
    "output": "FastAPI的性能如何？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 分析FastAPI和Flask的核心区别\nQ2: Flask是否更适合初学者\n\n当前查询：\n另一个呢\n\n改写后查询：\n",
    "input": "",
    "output": "FastAPI是否更适合初学者"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: AWS、Azure和Google Cloud的市场份额如何\nQ2: AWS的主要服务有哪些？\nQ3: Azure和AWS在企业应用方面有什么不同？\nQ4: AWS的价格策略是怎样的？\nQ5: 谁更适合小型创业公司？\n\n当前查询：\n其他两家的价格策略呢？\n\n改写后查询：\n",
    "input": "",
    "output": "Azure和Google Cloud的价格策略是怎样的？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 对比下iPhone 15、三星S23和华为Mate60的处理器性能\nQ2: iPhone的相机表现如何\nQ3: 三星S23的屏幕有什么特点\nQ4: 华为Mate60的通信能力怎么样\nQ5: i15的电池续航表现如何\n\n当前查询：\n另外两款的电池续航表现呢？\n\n改写后查询：\n",
    "input": "",
    "output": "三星S23和华为Mate60的电池续航表现如何？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: TensorFlow、PyTorch和JAX各有什么优势\nQ2: 它们在产业界的应用情况如何\nQ3: 哪个更适合研究工作？\nQ4: JAX的自动微分机制有什么特点\n\n当前查询：\n前两个框架呢\n\n改写后查询：\n",
    "input": "",
    "output": "TensorFlow和PyTorch的自动微分机制有什么特点？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: Linux、Windows和macOS的主要区别是什么\nQ2: Linux的安全性如何？\nQ3: macOS的用户界面有什么特点\nQ4: Linux的开源特性带来哪些好处\nQ5: macOS的安全性如何\n\n当前查询：\nWindows呢？\n\n改写后查询：\n",
    "input": "",
    "output": "Windows的安全性如何？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: BERT和GPT有啥不一样\nQ2: BERT咋做文本分类\n\n当前查询：\n内过模型的训练数据咋弄\n\n改写后查询：\n",
    "input": "",
    "output": "BERT模型的训练数据怎么获取"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: FastAPI和Flask的差老鼻子了\nQ2: FastAPI的异步特性是啥原理\n\n当前查询：\n这破玩仍的API咋调用啊\n\n改写后查询：\n",
    "input": "",
    "output": "FastAPI的API怎么调用"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: Docker容器编排最佳实践是什么\nQ2: Kubernetes太复杂了\n\n当前查询：\n那用别的方法行不行\n\n改写后查询：\n",
    "input": "",
    "output": "除了Kubernetes，还有什么Docker容器编排方法可以使用"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 什么是向量数据库\nQ2: Milvus的优势是什么\n\n当前查询：\n在哪些场景下使用\n\n改写后查询：\n",
    "input": "",
    "output": "Milvus向量数据库在哪些场景下使用？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 谷胱甘肽中必定含有哪几种元素\n\n当前查询：\n它的什么与什么试剂作用是显紫色的\n\n改写后查询：\n",
    "input": "",
    "output": "谷胱甘肽的什么元素与什么试剂作用是显紫色的？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 共产主义是什么？\nQ2: 哪个国家可能先实现呢？\nQ3: 大概啥时候可以实现\n\n当前查询：\n我们这代人可以做些什么来帮助实现呢？\n\n改写后查询：\n",
    "input": "",
    "output": "我们这代人可以做些什么来帮助实现共产主义呢？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 登出接口是狗二负责开发的么？\nQ2: 他还负责了哪些接口的开发？\n\n当前查询：\n查询SIM卡认证结果接口也是他开发的吗？\n\n改写后查询：\n",
    "input": "",
    "output": "查询SIM卡认证结果接口也是狗二开发的吗？"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\n\n\n当前查询：\n天空有时候是虹色有时候是蓝色，为啥\n\n改写后查询：\n",
    "input": "",
    "output": "天空有时候是红色有时候是蓝色，为啥"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\n\n\n当前查询：\n我相信命运不会灼弄人\n\n改写后查询：\n",
    "input": "",
    "output": "我相信命运不会捉弄人"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 再介绍下北京工商大学，首都经济贸易大学，首都师范大学\n\n当前查询：\n按照学校简介加王牌专业进行介绍\n\n改写后查询：\n",
    "input": "",
    "output": "按照学校简介加王牌专业分别对北京工商大学，首都经济贸易大学，首都师范大学三所大学进行介绍"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 四化\nQ2: 不对再重新介绍\n\n当前查询：\n还是不对\n\n改写后查询：\n",
    "input": "",
    "output": "重新介绍四化"
  },
  {
    "instruction": "你的任务是利用历史查询的上下文，解析并替换当前查询中的指代不明词语，使其更清晰、更具体。\n\n主要任务：\n1. 仔细分析历史查询和当前查询，理解它们之间的语义关联。\n2. 明确识别当前查询中所有指代不明的词语或短语（例如：\"他\"、\"她\"、\"这个\"、\"那个\"、\"该演员\"、\"男主\" 等）。\n3. 从历史查询中找到最相关的、更具体的人名、实体或描述来替换这些指代不明的部分。\n4. 特别处理以下场景：\n   - 重复询问：当遇到\"重新回答\"、\"再说一遍\"等表达时，需要还原原始问题\n   - 纠错反馈：当遇到\"回答错了\"、\"不对\"等反馈时，后续的重复询问需要保持原始问题的完整性\n   - 补充说明：当用户要求\"说详细点\"、\"解释一下\"等，需要保持原主题\n   - 答案依赖：当代词指代依赖于上一个问题的答案而非问题本身时，不进行改写\n5. 改写后的查询必须保持原始意图，且更完整、更独立。\n6. 只进行必要的替换和补充，不要添加无关信息或改变问题核心。\n7. 当前查询与历史查询之间必须存在明确的语义关联，才进行改写。\n8. 改写后的查询必须语句通顺、自然流畅，符合日常语言表达习惯。\n9. 严格遵循以下约束：\n   - 保持原始查询的语言（如英文查询保持英文，中文查询保持中文）\n   - 不要改变问题的类型（如陈述句不变疑问句，简单句不变复杂句）\n   - 保留原始查询的语气和表达方式\n10. 需要特别注意二选一或多选一问题后的指代：\n    - 如果上一个问题是\"A和B哪个更好？\"，当前问题是\"它怎么样？\"\n    - 此时\"它\"的指代取决于问题的回答，而非问题本身\n    - 此类情况下，不应进行改写，保持原始查询\n\n示例 1 (人名替换)：\n历史：\nQ1: 小明来自哪里\n当前查询: 他在美团工作吗\n改写结果: 小明在美团工作吗\n\n示例 2 (描述替换)：\n历史：\nQ1: 这个杀手不太冷男主是谁？\n当前查询: 这个男主出演了哪些电影？\n改写结果: 这个杀手不太冷的男主出演了哪些电影？\n\n示例 3 (不改写)：\n历史：\nQ1: 今天天气怎么样？\n当前查询: 北京明天会下雨吗？\n改写结果: 北京明天会下雨吗？（无关联，无需改写）\n\n示例 4 (人名替换，拼写错误)：\n历史：\nQ1: 吴宇佳来自哪各学校\nQ2: 她喜欢打羽毛球不\nQ3: 她之前在哪个工作\n当前查询: 她在哪个学校毕业\n改写结果: 吴宇佳在哪个学校毕业\n\n示例 5 (复杂语义关联)：\n历史：\nQ1: 义乌工商职业技术学院2025年高层次人才引进计划招聘多少人？\nQ2: 这些岗位的年龄要求分别是多少？\n当前查询: 招聘对象包括哪些人群？\n改写结果: 义乌工商职业技术学院2025年高层次人才引进计划的招聘对象包括哪些人群？\n\n示例 6 (保持语言一致性)：\n历史：\nQ1: why Kelvin found so brave\nQ2: is he superman\n当前查询: maybe ironman\n改写结果: Kelvin is so brave, maybe he is ironman\n\n示例 7 (混合语言输入)：\n历史：\nQ1: 李白是哪个朝代的诗人？\nQ2: 他的成名作是什么？\n当前查询: his most famous poem?\n改写结果: 李白's most famous poem?\n\n示例 8 (重复询问场景)：\n历史：\nQ1: 四化是什么\nQ2: 回答错了\n当前查询: 重新回答下把，还是没回答对\n改写结果: 请重新回答四化是什么\n\n示例 9 (纠错反馈场景)：\n历史：\nQ1: 中国有多少个省份？\nQ2: 这个数字不对\n当前查询: 麻烦再确认下\n改写结果: 请再确认中国有多少个省份\n\n示例 10 (补充说明场景)：\n历史：\nQ1: 什么是人工智能？\nQ2: 没太明白\n当前查询: 能说得详细一点吗\n改写结果: 能详细解释下什么是人工智能吗\n\n示例 11 (答案依赖场景)：\n历史：\nQ1: Unity和Unreal Engine在性能上有什么区别？\nQ2: Unity的优势是什么？\nQ3: Unreal Engine的图形表现力如何？\nQ4: Unity适合做什么类型的游戏？\nQ5: 哪个更适合初学者入门？\n当前查询: 它适合做啥类型游戏？\n改写结果: 它适合做啥类型游戏？（需要保持原样，因为\"它\"指代依赖于上一个问题的答案）\n\n示例 12 (二选一后的指代场景)：\n历史：\nQ1: Python和Java哪个更高效？\n当前查询: 它的内存管理怎么样？\n改写结果: 它的内存管理怎么样？（不改写，指代依赖答案）\n\n输出要求：\n只输出最终改写后的查询文本。\n\n历史查询：\nQ1: 介绍四化\nQ2: 重新介绍下\n\n当前查询：\n和三化有啥区别\n\n改写后查询：\n",
    "input": "",
    "output": "四化和三化有什么区别"
  }
]